import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming the file is named 'output.txt'
with open('output.txt', 'r') as file:
    lines = file.readlines()

# Remove unwanted characters and split by '&'
lines = [line.replace('\\\\hline', '').replace('\\', '').replace('%', '').split('&') for line in lines]

# Get column names from the first line and strip whitespace
columns = [name.strip() for name in lines[0]]

# Create list of dictionaries for each row of data
data = []
for line in lines[1:]:
    row = {columns[i]: value.strip() for i, value in enumerate(line)}
    data.append(row)

# Convert list of dictionaries to DataFrame
df = pd.DataFrame(data)

print(df)

#df below
"""    TimeInterval Radius Avg AIS red./meter Avg. Runtime (s)
0           10S  0.025              2.870           78.357
1           10S  0.057             75.434           72.277
2           10S  0.075             71.033           66.885
3           10S    0.1             58.105           71.810
4           10S    0.2             33.139           61.095
5           20S  0.025           -204.510           78.430
6           20S  0.057             46.771           59.247
7           20S  0.075             55.660           44.462
8           20S    0.1             47.248           56.542
9           20S    0.2             32.786           51.137
10          60S  0.025           -147.000           64.582
11          60S  0.057             -5.341           37.572
12          60S  0.075             13.966           42.422
13          60S    0.1             22.032           38.495
14          60S    0.2             25.408           29.422 """

# Convert DataFrame columns to appropriate data types
df['TimeInterval'] = df['TimeInterval'].astype(str)
df['Radius'] = df['Radius'].astype(float)
df['Avg AIS red./meter'] = df['Avg AIS red./meter'].astype(float)
df['Avg. Runtime (s)'] = df['Avg. Runtime (s)'].astype(float)

fig, axs = plt.subplots(5, 1, figsize=(10, 30))

# Adjust the vertical spacing
plt.subplots_adjust(hspace=0.5)

# Line Plot for Avg AIS Reduction and Avg Runtime over TimeInterval
sns.lineplot(x='TimeInterval', y='Avg AIS red./meter', data=df, ax=axs[0], label='Avg AIS Reduction')
sns.lineplot(x='TimeInterval', y='Avg. Runtime (s)', data=df, ax=axs[0], label='Avg Runtime')
axs[0].set_title('Avg AIS Reduction and Avg Runtime over TimeInterval')
axs[0].set_ylabel('Value')

# Scatter Plot for Avg AIS Reduction over Radius for each TimeInterval
sns.scatterplot(x='Radius', y='Avg AIS red./meter', hue='TimeInterval', data=df, ax=axs[1])
axs[1].set_title('Avg AIS Reduction over Radius for each TimeInterval')

# Bar Chart for Avg AIS Reduction for different TimeIntervals
sns.barplot(x='TimeInterval', y='Avg AIS red./meter', hue='Radius', data=df, ax=axs[2])
axs[2].set_title('Avg AIS Reduction for different TimeIntervals')

# Stacked Bar Chart for Avg AIS Reduction and Avg Runtime
df_grouped = df.groupby(['TimeInterval', 'Radius']).sum().unstack()
df_grouped.plot(kind='bar', stacked=True, ax=axs[3])
axs[3].set_title('Stacked Bar Chart for Avg AIS Reduction and Avg Runtime')

# Heatmap for Avg AIS Reduction with Radius and TimeInterval
pivot_table = df.pivot_table(values='Avg AIS red./meter', index='TimeInterval', columns='Radius')
sns.heatmap(pivot_table, cmap='YlGnBu', ax=axs[4])
axs[4].set_title('Heatmap for Avg AIS Reduction with Radius and TimeInterval')

plt.show()